<!DOCTYPE html>
<html lang="id">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>NirKyy - REST API Documentation</title>
  <meta name="description" content="Dokumentasi REST API NirKyy dengan gaya cyberpunk. Temukan endpoint, coba langsung, dan salin URL dengan mudah.">
  <meta name="keywords" content="REST API, dokumentasi API, cyberpunk, NirKyy, endpoint, API documentation, web API, fetch API, coba API">
  <meta name="author" content="NirKyy Developer">
  <meta name="robots" content="index, follow">
  <meta http-equiv="Content-Security-Policy" content="upgrade-insecure-requests">
  <meta property="og:title" content="NirKyy - REST API Documentation">
  <meta property="og:description" content="Dokumentasi REST API NirKyy dengan gaya cyberpunk. Temukan endpoint, coba langsung, dan salin URL dengan mudah.">
  <meta property="og:type" content="website">
  <meta property="og:url" content="nirkyy.koyeb.app">
  <meta property="og:image" content="https://i.ibb.co/hFF2Rd8Z/62bfdd334ee4.jpg">
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:title" content="NirKyy - REST API Documentation">
  <meta name="twitter:description" content="Dokumentasi REST API NirKyy dengan gaya cyberpunk. Temukan endpoint, coba langsung, dan salin URL dengan mudah.">
  <meta name="twitter:site" content="@NirKyyDev">
  <meta name="twitter:image" content="https://i.ibb.co/hFF2Rd8Z/62bfdd334ee4.jpg">
  <link rel="icon" href="favicon.ico" type="image/x-icon">
  <!-- Font Awesome CDN -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-p0u6njOl6B/jfWzQ3j5ChTS3VXzl1NTdNy7BLk/fMkjkclmHTEv+ID8AGrqK3m6TnYIB8fN1YCEd79N3f9x0jg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
  <!-- Bootstrap Icons CDN -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <style>
    body {
      font-family: 'Orbitron', sans-serif;
      background-color: #111;
      color: #00ff7f;
      margin: 0;
      padding: 0;
      overflow-x: hidden;
    }
    header {
      background-color: #222;
      padding: 20px;
      text-align: center;
      border-bottom: 2px solid #00ffff;
      display: flex;
      justify-content: center;
      align-items: center;
      animation: borderPulse 2s infinite alternate;
    }
    @keyframes borderPulse {
      from { border-bottom-color: #00ffff; }
      to { border-bottom-color: #ff00ff; }
    }
    header h1 {
      margin: 0;
      font-size: 2.5em;
      text-shadow: 0 0 10px #00ff7f;
      animation: textGlitch 1.5s infinite alternate;
    }
    header img {
      max-height: 70px;
      margin-right: 20px;
      animation: logoPulse 2s infinite alternate;
    }
    @keyframes textGlitch {
      0%, 100% { text-shadow: 0 0 10px #00ff7f; }
      50% { text-shadow: -2px -2px 5px #ff00ff, 2px 2px 5px #00ffff; }
    }
    @keyframes logoPulse {
      from { opacity: 0.9; }
      to { opacity: 0.7; }
    }
    .search-container {
      margin-top: 20px;
      position: relative;
      text-align: center;
    }
    .search-container input[type="text"] {
      padding: 10px 35px 10px 10px;
      border: 2px solid #00ff7f;
      background-color: #333;
      color: #fff;
      border-radius: 5px;
      width: 70%;
      max-width: 500px;
      font-size: 1em;
      transition: border-color 0.3s ease, box-shadow 0.3s ease;
    }
    .search-container input[type="text"]:focus {
      border-color: #ff00ff;
      box-shadow: 0 0 8px #ff00ff;
      outline: none;
    }
    .search-icon {
      position: absolute;
      right: 15px;
      top: 50%;
      transform: translateY(-50%);
      font-size: 1.2em;
      color: #00ff7f;
      opacity: 0.8;
    }
    main { padding: 20px; }
    #tagHopper {
      display: flex;
      flex-wrap: wrap;
      gap: 10px;
      margin-bottom: 20px;
      justify-content: center;
    }
    .tag-button {
      background-color: #00ff7f;
      color: #111;
      border: 1px solid #00ff7f;
      padding: 8px 15px;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
    }
    .tag-button:hover,
    .tag-button.active {
      background-color: #111;
      color: #00ff7f;
      border-color: #ff00ff;
      text-shadow: 0 0 5px #ff00ff;
    }
    #endpointListSection .card {
      border: 1px solid #00ff7f;
      background-color: #222;
      color: #00ff7f;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      margin-bottom: 15px;
      animation: cardFadeIn 0.5s ease-out forwards;
    }
    #endpointListSection .card:hover {
      transform: translateY(-5px);
      box-shadow: 0 0 15px #00ff7f;
    }
    .card-header {
      background-color: #333;
      color: #00ffff;
      border-bottom: 1px solid #00ffff;
    }
    .card-body {
      padding: 1.5rem;
    }
    .badge-secondary {
      background-color: #ff00ff;
      color: #fff;
    }
    pre {
      white-space: pre-wrap;
      background-color: #333;
      border: 1px solid #00ff7f;
      padding: 10px;
      border-radius: 5px;
      overflow-x: auto;
      color: #00ff7f;
    }
    .modal {
      display: none;
      position: fixed;
      z-index: 1050;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0,0,0,0.8);
      animation: modalFadeIn 0.4s ease-out forwards;
    }
    @keyframes modalFadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }
    .modal-content {
      background-color: #222;
      color: #fff;
      border: 1px solid #00ffff;
      border-radius: 10px;
    }
    .modal-header,
    .modal-footer {
      padding: 1rem 1.5rem;
      border: none;
    }
    .modal-header {
      border-bottom: 1px solid #00ffff;
    }
    .modal-title {
      color: #00ffff;
      font-weight: bold;
      text-shadow: 0 0 5px #00ffff;
    }
    .modal-body { padding: 1.5rem; }
    .loading {
      border: 6px solid #333;
      border-top: 6px solid #00ffff;
      border-radius: 50%;
      width: 50px;
      height: 50px;
      animation: spin 1s linear infinite;
      margin: 20px auto;
      display: none;
    }
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
    footer {
      text-align: center;
      padding: 20px;
      background-color: #222;
      color: #aaa;
      border-top: 2px solid #00ffff;
    }
    .axios-code {
      background-color: #333;
      padding: 10px;
      border-radius: 5px;
      margin-top: 10px;
      overflow-x: auto;
      font-family: monospace;
      font-size: 0.9em;
      color: #00ff7f;
      border: 1px solid #00ff7f;
    }
    .btn-primary, .btn-info, .btn-outline-info {
      font-family: 'Orbitron', sans-serif;
      border: 1px solid #00ff7f;
      background-color: #00ff7f;
      color: #111;
      transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
    }
    .btn-primary:hover, .btn-info:hover, .btn-outline-info:hover,
    .btn-primary:focus, .btn-info:focus, .btn-outline-info:focus {
      background-color: #111;
      color: #00ff7f;
      border-color: #ff00ff;
      box-shadow: 0 0 5px #ff00ff;
    }
    .close.text-light {
      color: #ff00ff !important;
      text-shadow: 0 0 5px #ff00ff;
    }
  </style>
  <script async="async" data-cfasync="false" src="//pl26111309.effectiveratecpm.com/0171bcc474ae933f061e3acb0c0eb62d/invoke.js"></script>
</head>
<body>
  <header>
    <img src="https://i.ibb.co.com/hFF2Rd8Z/62bfdd334ee4.jpg" alt="Logo NirKyy">
    <h1>NirKyy</h1>
    <div id="container-0171bcc474ae933f061e3acb0c0eb62d"></div>
  </header>
  <main class="container">
    <div class="search-container">
      <input type="text" id="searchEndpoint" placeholder="Cari Endpoint atau Tag...">
      <i class="fas fa-search search-icon"></i>
    </div>
    <div id="tagHopper"></div>
    <section id="endpointListSection"></section>
  </main>

  <!-- Modal untuk mencoba endpoint -->
  <div id="tryModal" class="modal">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Coba Endpoint</h5>
          <button type="button" class="close text-light" id="closeButton">&times;</button>
        </div>
        <div class="modal-body">
          <div id="parameterInputs"></div>
          <button id="runButton" class="btn btn-info btn-block"><i class="fas fa-play"></i> Run</button>
          <div id="loadingIndicator" class="loading"></div>
          <div id="apiResponse" class="mt-3">
            <h5 class="text-cyber">Response Header:</h5>
            <pre id="responseHeader" class="p-2"></pre>
            <h5 class="text-cyber">Response Body:</h5>
            <pre id="responseBody" class="p-2"></pre>
            <div class="d-flex justify-content-end mt-2">
              <button id="copyResponseButton" class="btn btn-outline-info btn-sm mr-2"><i class="fas fa-copy"></i> Copy Response</button>
              <button id="copyEndpointButton" class="btn btn-info btn-sm"><i class="fas fa-link"></i> Copy Endpoint</button>
            </div>
          </div>
          <div id="axiosExample" class="axios-code mt-3">
            <h5>Contoh Kode Axios (GET):</h5>
            <pre id="axiosSnippet"><code>// Klik Run untuk menampilkan contoh kode Axios</code></pre>
          </div>
        </div>
      </div>
    </div>
  </div>

  <footer>
    <p>&copy; 2025 NirKyy. Free Karena saya buat juga tanpa biaya ðŸ—¿ | Join Saluran <a href="https://whatsapp.com/channel/0029Vb3qLJRDuMRdjacRwe2T" target="_blank">WhatsApp</a></p>
  </footer>
  <audio id="successSound" src="success.mp3" preload="auto"></audio>
  <audio id="errorSound" src="error.mp3" preload="auto"></audio>

  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      let endpointData = [];
      let currentTag = null;
      let currentEndpointData;
      let finalApiUrl = '';
      
      const endpointListSection = document.getElementById('endpointListSection');
      const searchEndpointInput = document.getElementById('searchEndpoint');
      const tagHopperSection = document.getElementById('tagHopper');
      const tryModal = document.getElementById('tryModal');
      const closeButton = document.getElementById('closeButton');
      const parameterInputsDiv = document.getElementById('parameterInputs');
      const runButton = document.getElementById('runButton');
      const responseHeader = document.getElementById('responseHeader');
      const responseBody = document.getElementById('responseBody');
      const copyResponseButton = document.getElementById('copyResponseButton');
      const copyEndpointButton = document.getElementById('copyEndpointButton');
      const loadingIndicator = document.getElementById('loadingIndicator');
      const axiosSnippetPre = document.getElementById('axiosSnippet');
      const successSound = document.getElementById('successSound');
      const errorSound = document.getElementById('errorSound');

      // Ambil data endpoint dari list.json
      fetch('list.json')
        .then(response => response.json())
        .then(data => {
          endpointData = data;
          renderTagHopper(endpointData);
          renderEndpointList(endpointData);
        })
        .catch(err => console.error(err));

      function renderTagHopper(endpoints) {
        const tags = new Set();
        endpoints.forEach(endpoint => {
          endpoint.tags.forEach(tag => tags.add(tag));
        });
        const sortedTags = Array.from(tags).sort();
        tagHopperSection.innerHTML = '';
        sortedTags.forEach(tag => {
          const btn = document.createElement('button');
          // Sertakan ikon hashtag di setiap tombol tag
          btn.innerHTML = '<i class="fas fa-hashtag"></i> ' + tag;
          btn.className = 'tag-button';
          btn.addEventListener('click', () => {
            currentTag = tag;
            document.querySelectorAll('.tag-button').forEach(b => b.classList.remove('active'));
            btn.classList.add('active');
            renderEndpointList(endpointData, tag);
          });
          tagHopperSection.appendChild(btn);
        });
      }

      // renderEndpointList kini menerima parameter ketiga untuk daftar endpoint yang sudah terfilter (jika ada)
      function renderEndpointList(endpoints, selectedTag = null, endpointsToDisplay = null) {
        endpointListSection.innerHTML = '';
        let filteredEndpoints;
        if (endpointsToDisplay) {
          filteredEndpoints = endpointsToDisplay;
        } else if (selectedTag) {
          filteredEndpoints = endpoints.filter(ep => ep.tags.includes(selectedTag));
        } else {
          filteredEndpoints = endpoints;
        }
        if (filteredEndpoints.length === 0) {
          endpointListSection.innerHTML = '<p class="text-light">Endpoint tidak ditemukan.</p>';
          return;
        }
        const row = document.createElement('div');
        row.className = 'row';
        filteredEndpoints.forEach(endpoint => {
          const col = document.createElement('div');
          col.className = 'col-md-6 mb-3';
          const card = document.createElement('div');
          card.className = 'card mb-3';
          
          // Header card
          const cardHeader = document.createElement('div');
          cardHeader.className = 'card-header';
          cardHeader.textContent = endpoint.nama;
          card.appendChild(cardHeader);
          
          // Body card
          const cardBody = document.createElement('div');
          cardBody.className = 'card-body';
          const tagsDiv = document.createElement('div');
          tagsDiv.className = 'mb-2';
          endpoint.tags.forEach(tag => {
            const span = document.createElement('span');
            span.className = 'badge badge-secondary mr-1';
            span.innerHTML = '<i class="fas fa-hashtag"></i> ' + tag;
            tagsDiv.appendChild(span);
          });
          cardBody.appendChild(tagsDiv);
          
          const urlDiv = document.createElement('div');
          urlDiv.className = 'bg-dark p-2 mb-2';
          urlDiv.style.fontSize = '0.9em';
          urlDiv.style.overflowX = 'auto';
          urlDiv.textContent = endpoint.endpoint;
          cardBody.appendChild(urlDiv);
          
          const btnContainer = document.createElement('div');
          btnContainer.className = 'd-flex justify-content-end';
          
          const copyBtn = document.createElement('button');
          copyBtn.className = 'btn btn-outline-info btn-sm mr-2 copy-url-button';
          copyBtn.innerHTML = '<i class="fas fa-copy"></i> Copy URL';
          copyBtn.setAttribute('data-url', endpoint.endpoint);
          btnContainer.appendChild(copyBtn);
          
          const tryBtn = document.createElement('button');
          tryBtn.className = 'btn btn-info btn-sm try-button';
          tryBtn.innerHTML = '<i class="fas fa-play"></i> Try';
          tryBtn.setAttribute('data-endpoint', JSON.stringify(endpoint));
          btnContainer.appendChild(tryBtn);
          
          cardBody.appendChild(btnContainer);
          card.appendChild(cardBody);
          col.appendChild(card);
          row.appendChild(col);
        });
        endpointListSection.appendChild(row);
        attachButtonEventListeners();
      }

      function attachButtonEventListeners() {
        document.querySelectorAll('.copy-url-button').forEach(button => {
          button.addEventListener('click', function() {
            const url = this.getAttribute('data-url');
            navigator.clipboard.writeText(url)
              .then(() => alert('URL berhasil di-copy!'))
              .catch(() => alert('Gagal copy URL.'));
          });
        });
        document.querySelectorAll('.try-button').forEach(button => {
          button.addEventListener('click', function() {
            const endpoint = JSON.parse(this.getAttribute('data-endpoint'));
            openTryModal(endpoint);
          });
        });
      }

      function openTryModal(endpoint) {
        currentEndpointData = endpoint;
        // Bersihkan input parameter dan response
        parameterInputsDiv.innerHTML = '';
        responseHeader.textContent = '';
        responseBody.textContent = '';
        axiosSnippetPre.innerHTML = `<code>// Klik Run untuk menampilkan contoh kode Axios</code>`;

        if (endpoint.parameter && endpoint.parameter.length > 0) {
          endpoint.parameter.forEach(param => {
            const paramName = param.params;
            const defaultValue = param.example || '';
            const required = (param.opsional === false);
            const inputDiv = document.createElement('div');
            inputDiv.className = 'mb-3';
            const label = document.createElement('label');
            label.textContent = `${paramName} ${required ? '(Wajib)' : '(Opsional)'}:`;
            const input = document.createElement('input');
            input.type = 'text';
            input.className = 'form-control bg-dark text-light';
            input.name = paramName;
            input.placeholder = defaultValue ? `Default: ${defaultValue}` : `Masukkan ${paramName}`;
            input.value = defaultValue;
            if (required) input.required = true;
            inputDiv.appendChild(label);
            inputDiv.appendChild(input);
            parameterInputsDiv.appendChild(inputDiv);
          });
        }
        tryModal.style.display = "block";
      }

      // Event listener untuk menutup modal jika klik di luar modal
      window.onclick = function(event) {
        if (event.target == tryModal) {
          tryModal.style.display = "none";
        }
      };

      closeButton.onclick = function() {
        tryModal.style.display = "none";
      };

      runButton.onclick = function() {
        runApiRequest();
      };

      copyResponseButton.onclick = function() {
        const responseText = responseHeader.textContent + "\n" + responseBody.textContent;
        navigator.clipboard.writeText(responseText)
          .then(() => alert('Response API berhasil di-copy!'))
          .catch(() => alert('Gagal copy response API.'));
      };

      copyEndpointButton.onclick = function() {
        if(finalApiUrl) {
          navigator.clipboard.writeText(finalApiUrl)
            .then(() => alert('Endpoint berhasil di-copy!'))
            .catch(() => alert('Gagal copy endpoint.'));
        } else {
          alert('Tidak ada endpoint yang dapat di-copy. Jalankan "Try" terlebih dahulu.');
        }
      };

      function runApiRequest() {
        if (!currentEndpointData) return;

        let apiUrl = currentEndpointData.endpoint;
        const params = {};
        let missingRequired = false;
        const inputs = parameterInputsDiv.querySelectorAll('input');
        
        inputs.forEach(input => {
          const paramName = input.name;
          const paramDef = currentEndpointData.parameter.find(p => p.params === paramName);
          const required = (paramDef.opsional === false);
          const defaultValue = paramDef.example || '';
          const trimmedValue = input.value.trim();
          if (trimmedValue) {
            params[paramName] = trimmedValue;
          } else if (!required && defaultValue) {
            params[paramName] = defaultValue;
          } else if (required && !trimmedValue) {
            missingRequired = true;
          }
        });
        
        if (missingRequired) {
          alert('Harap isi semua parameter wajib.');
          return;
        }
        
        // Gantikan placeholder {param} dalam URL
        Object.keys(params).forEach(paramName => {
          const placeholder = `{${paramName}}`;
          if (apiUrl.includes(placeholder)) {
            apiUrl = apiUrl.replace(placeholder, params[paramName]);
            delete params[paramName];
          }
        });
        
        // Bangun URL akhir beserta query string jika ada parameter tersisa
        let baseUrl = `https://nirkyy.koyeb.app${apiUrl}`;
        const urlObj = new URL(baseUrl);
        Object.entries(params).forEach(([key, value]) => {
          urlObj.searchParams.append(key, value);
        });
        finalApiUrl = urlObj.href;
        
        // Contoh kode Axios
        let axiosCode = Object.keys(params).length > 0 ?
          `axios.get('${baseUrl}', {\n  params: ${JSON.stringify(params, null, 2)}\n})` :
          `axios.get('${baseUrl}')`;
        axiosSnippetPre.innerHTML = `<code>${axiosCode}</code>`;
        
        loadingIndicator.style.display = 'block';
        responseHeader.textContent = '';
        responseBody.textContent = '';

        axios.get(finalApiUrl)
          .then(response => {
            loadingIndicator.style.display = 'none';
            let headers = '';
            Object.entries(response.headers).forEach(([key, value]) => {
              headers += `${key}: ${value}\n`;
            });
            const contentType = response.headers['content-type'] || '';
            if (contentType.includes('application/json')) {
              return { headers, body: JSON.stringify(response.data, null, 2), response };
            } else if (contentType.startsWith('image/')) {
              return { headers, body: '<Image>', type: 'image', url: response.config.url, response };
            } else if (contentType.startsWith('video/')) {
              return { headers, body: '<Video>', type: 'video', url: response.config.url, response };
            } else {
              return { headers, body: response.data, response };
            }
          })
          .then(result => {
            if (result.response.status >= 200 && result.response.status < 300) {
              successSound.play();
            } else {
              errorSound.play();
            }
            responseHeader.textContent = result.headers;
            if (result.type === 'image') {
              responseBody.innerHTML = '';
              const img = document.createElement('img');
              img.src = result.url;
              responseBody.appendChild(img);
            } else if (result.type === 'video') {
              responseBody.innerHTML = '';
              const video = document.createElement('video');
              video.src = result.url;
              video.controls = true;
              responseBody.appendChild(video);
            } else {
              responseBody.textContent = result.body;
            }
          })
          .catch(error => {
            loadingIndicator.style.display = 'none';
            errorSound.play();
            responseHeader.textContent = 'Error:';
            responseBody.textContent = error.message;
          });
      }

      // Event listener untuk search endpoint
      searchEndpointInput.addEventListener('input', function() {
        const searchTerm = searchEndpointInput.value.trim().toLowerCase();
        const allEndpoints = currentTag ? endpointData.filter(ep => ep.tags.includes(currentTag)) : endpointData;
        const filteredEndpoints = allEndpoints.filter(ep =>
          ep.nama.toLowerCase().includes(searchTerm) ||
          ep.tags.some(tag => tag.toLowerCase().includes(searchTerm)) ||
          ep.endpoint.toLowerCase().includes(searchTerm)
        );
        renderEndpointList(endpointData, currentTag ? currentTag : null, filteredEndpoints);
      });
    });
  </script>
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>