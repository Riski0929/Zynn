<!DOCTYPE html>
<html lang="id">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>NirKyy - REST API Documentation</title>
  <meta name="description" content="Nirkyy Adalah Web yang menyediakan Kumpulan API gratis untuk kebutuhan bot WhatsApp, telegram, dan Web">
  <meta name="keywords" content="REST API, dokumentasi API, Collection API, NirKyy, endpoint, API documentation, web API, fetch API, coba API">
  <meta name="author" content="NirKyy Developer">
  <meta name="robots" content="index, follow">
  <meta http-equiv="Content-Security-Policy" content="upgrade-insecure-requests">
  <meta property="og:title" content="NirKyy - REST API Documentation">
  <meta property="og:description" content="Nirkyy Adalah Web yang menyediakan Kumpulan API gratis untuk kebutuhan bot WhatsApp, telegram, dan Web">
  <meta property="og:type" content="website">
  <meta property="og:url" content="nirkyy.koyeb.app">
  <meta property="og:image" content="/logo.jpg">
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:title" content="NirKyy - REST API Documentation">
  <meta name="twitter:description" content="Nirkyy Adalah Web yang menyediakan Kumpulan API gratis untuk kebutuhan bot WhatsApp, telegram, dan Web">
  <meta name="twitter:site" content="@NirKyyDev">
  <meta name="twitter:image" content="/logo.jpg">
  <link rel="icon" href="favicon.ico" type="image/x-icon">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&display=swap" rel="stylesheet">
  <style>
    body { font-family: 'Orbitron', sans-serif; background-color: #111; color: #39ff14; margin: 0; padding: 0; overflow-x: hidden; }
    header { background-color: #222; padding: 20px; border-bottom: 2px solid #00ffff; display: flex; align-items: center; justify-content: space-between; }
    .header-left { display: flex; align-items: center; }
    .header-left img { max-height: 70px; margin-right: 15px; }
    .search-container { margin-top: 20px; position: relative; text-align: center; }
    .search-container input[type="text"] { padding: 10px 35px 10px 10px; border: 2px solid #39ff14; background-color: #333; color: #fff; border-radius: 5px; width: 70%; max-width: 500px; font-size: 1em; transition: border-color 0.3s ease, box-shadow 0.3s ease; }
    .search-container input[type="text"]:focus { border-color: #00ffff; box-shadow: 0 0 8px #00ffff; outline: none; }
    .search-icon { position: absolute; right: 15px; top: 50%; transform: translateY(-50%); font-size: 1.2em; color: #39ff14; opacity: 0.8; }
    #tagButtons { margin-top: 20px; text-align: center; }
    #tagButtons button { margin: 5px; }
    main { padding: 20px; }
    #endpointListSection .card { border: 1px solid #39ff14; background-color: #1a1a1a; color: #39ff14; transition: transform 0.3s ease, box-shadow 0.3s ease; margin-bottom: 15px; animation: cardFadeIn 0.5s ease-out forwards; }
    @keyframes cardFadeIn { from { opacity: 0; transform: translateY(10px); } to { opacity: 1; transform: translateY(0); } }
    #endpointListSection .card:hover { transform: translateY(-5px); box-shadow: 0 0 15px #00ffff; }
    .card-header { background-color: #0f0f0f; color: #00ffff; border-bottom: 1px solid #00ffff; }
    .card-body { padding: 1.5rem; }
    .badge-secondary { background-color: #ff00ff; color: #fff; }
    pre { white-space: pre-wrap; background-color: #333; border: 1px solid #39ff14; padding: 10px; border-radius: 5px; overflow-x: auto; color: #39ff14; position: relative; }
    .modal { display: none; position: fixed; z-index: 1050; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgba(0,0,0,0.8); animation: modalFadeIn 0.4s ease-out forwards; }
    @keyframes modalFadeIn { from { opacity: 0; } to { opacity: 1; } }
    .modal-content { background-color: #222; color: #fff; border: 1px solid #00ffff; border-radius: 10px; }
    .modal-header, .modal-footer { padding: 1rem 1.5rem; border: none; }
    .modal-header { border-bottom: 1px solid #00ffff; }
    .modal-title { color: #00ffff; font-weight: bold; text-shadow: 0 0 5px #00ffff; }
    .modal-body { padding: 1.5rem; }
    .loading { border: 6px solid #333; border-top: 6px solid #00ffff; border-radius: 50%; width: 50px; height: 50px; animation: spin 1s linear infinite; margin: 20px auto; display: none; }
    @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
    footer { text-align: center; padding: 20px; background-color: #222; color: #aaa; border-top: 2px solid #00ffff; }
    .axios-code { background-color: #333; padding: 10px; border-radius: 5px; margin-top: 10px; overflow-x: auto; font-family: monospace; font-size: 0.9em; color: #39ff14; border: 1px solid #39ff14; position: relative; }
    .btn-primary, .btn-info, .btn-outline-info { font-family: 'Orbitron', sans-serif; border: 1px solid #39ff14; background-color: #39ff14; color: #111; transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease; }
    .btn-primary:hover, .btn-info:hover, .btn-outline-info:hover, .btn-primary:focus, .btn-info:focus, .btn-outline-info:focus { background-color: #0f0f0f; color: #00ffff; border-color: #ff00ff; box-shadow: 0 0 5px #ff00ff; }
    .copy-btn { position: absolute; top: 5px; right: 5px; background: transparent; border: none; color: #00ffff; cursor: pointer; }
  </style>
</head>
<body>
  <header>
    <div class="header-left">
      <img src="/logo.jpg" alt="Logo NirKyy">
      <h1>NirKyy</h1>
    </div>
    <div id="container-0171bcc474ae933f061e3acb0c0eb62d"></div>
  </header>
  <main class="container">
    <div class="search-container">
      <input type="text" id="searchEndpoint" placeholder="Cari Endpoint atau Tag">
      <i class="fas fa-search search-icon"></i>
    </div>
    <div id="tagButtons"></div>
    <div id="endpointListSection"></div>
  </main>
  <footer>
    <p>&copy; 2025 NirKyy. API Bakal tetep aktif selama Koyeb gratisüóøüôè | Join Saluran <a href="https://whatsapp.com/channel/0029Vb3qLJRDuMRdjacRwe2T" target="_blank">WhatsApp</a></p>
  </footer>
  <div id="tryModal" class="modal">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Coba Endpoint</h5>
          <button type="button" class="close text-light" id="closeButton">&times;</button>
        </div>
        <div class="modal-body">
          <div id="parameterInputs"></div>
          <button id="runButton" class="btn btn-info btn-block"><i class="fas fa-play"></i> Run</button>
          <div id="loadingIndicator" class="loading"></div>
          <div id="apiResponse" class="mt-3">
            <h5 class="text-cyber">Response Header:</h5>
            <div class="position-relative">
              <pre id="responseHeader" class="p-2"></pre>
              <button id="copyResponseHeaderButton" class="copy-btn">Salin Sekarang</button>
            </div>
            <h5 class="text-cyber">Response Body:</h5>
            <div class="position-relative">
              <pre id="responseBody" class="p-2"></pre>
              <button id="copyResponseBodyButton" class="copy-btn">Salin Sekarang</button>
            </div>
          </div>
          <div id="axiosExample" class="axios-code mt-3">
            <h5>Contoh Kode Axios (GET):</h5>
            <div class="position-relative">
              <pre id="axiosSnippet"><code>axios.get('https://nirkyy.koyeb.app/your-endpoint', { responseType: 'arraybuffer' })
.then(response => {
  console.log(response);
})
.catch(error => {
  console.error(error);
});</code></pre>
              <button id="copyExampleButton" class="copy-btn">Salin Sekarang</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <audio id="successSound" src="success.mp3" preload="auto"></audio>
  <audio id="errorSound" src="error.mp3" preload="auto"></audio>
  <script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js" defer></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js" defer></script>
  <script defer>
    document.addEventListener('DOMContentLoaded', function() {
      let finalApiUrl = '';
      let isFetching = false;
      const endpointListSection = document.getElementById('endpointListSection');
      const searchEndpointInput = document.getElementById('searchEndpoint');
      const tagButtonsContainer = document.getElementById('tagButtons');
      const tryModal = document.getElementById('tryModal');
      const closeButton = document.getElementById('closeButton');
      const parameterInputsDiv = document.getElementById('parameterInputs');
      const runButton = document.getElementById('runButton');
      const responseHeader = document.getElementById('responseHeader');
      const responseBody = document.getElementById('responseBody');
      const axiosSnippet = document.getElementById('axiosSnippet').querySelector('code');
      const copyResponseHeaderButton = document.getElementById('copyResponseHeaderButton');
      const copyResponseBodyButton = document.getElementById('copyResponseBodyButton');
      const copyExampleButton = document.getElementById('copyExampleButton');
      const loadingIndicator = document.getElementById('loadingIndicator');
      const successSound = document.getElementById('successSound');
      const errorSound = document.getElementById('errorSound');
      let currentEndpointData = null;
      function debounce(func, wait) {
        let timeout;
        return function(...args) {
          clearTimeout(timeout);
          timeout = setTimeout(() => func.apply(this, args), wait);
        };
      }
      function attachCardEvents() {
        endpointListSection.addEventListener('click', function(e) {
          const btn = e.target.closest('button');
          if (!btn) return;
          if (btn.classList.contains('copy-url-button')) {
            const url = btn.getAttribute('data-url');
            navigator.clipboard.writeText(url).then(() => alert('URL berhasil di-copy!')).catch(() => alert('Gagal copy URL.'));
          } else if (btn.classList.contains('try-button')) {
            const data = btn.getAttribute('data-endpoint');
            if (data) {
              const endpoint = JSON.parse(data);
              openTryModal(endpoint);
            }
          }
        });
      }
      function openTryModal(endpoint) {
        currentEndpointData = endpoint;
        parameterInputsDiv.innerHTML = '';
        responseHeader.textContent = '';
        responseBody.textContent = '';
        axiosSnippet.innerText = "axios.get('https://nirkyy.koyeb.app" + endpoint.endpoint + "', { responseType: 'arraybuffer' })\n.then(response => {\n  console.log(response);\n})\n.catch(error => {\n  console.error(error);\n});";
        // Reset copy button visibility for response body
        copyResponseBodyButton.style.display = 'block';
        tryModal.style.display = 'block';
      }
      function clearRunData() {
        responseHeader.textContent = '';
        responseBody.textContent = '';
        axiosSnippet.innerText = '';
        finalApiUrl = '';
      }
      window.addEventListener('click', function(event) {
        if (event.target === tryModal) { 
          tryModal.style.display = 'none'; 
          clearRunData();
        }
      });
      closeButton.addEventListener('click', function() { 
        tryModal.style.display = 'none'; 
        clearRunData();
      });
      runButton.addEventListener('click', function() {
        if (!currentEndpointData) return;
        let apiUrl = currentEndpointData.endpoint;
        const params = {};
        let missingRequired = false;
        const inputs = parameterInputsDiv.querySelectorAll('input');
        inputs.forEach(input => {
          const paramName = input.name;
          const def = currentEndpointData.parameter.find(p => p.params === paramName);
          const required = (def.opsional === false);
          const defaultValue = def.example || '';
          const val = input.value.trim();
          if (val) { params[paramName] = val; } else if (!required && defaultValue) { params[paramName] = defaultValue; } else if (required && !val) { missingRequired = true; }
        });
        if (missingRequired) { alert('Harap isi semua parameter wajib.'); return; }
        Object.keys(params).forEach(paramName => {
          const placeholder = '{' + paramName + '}';
          if (apiUrl.includes(placeholder)) { apiUrl = apiUrl.replace(placeholder, params[paramName]); delete params[paramName]; }
        });
        let baseUrl = apiUrl;
        const urlObj = new URL("https://nirkyy.koyeb.app" + baseUrl);
        Object.entries(params).forEach(([k, v]) => { urlObj.searchParams.append(k, v); });
        finalApiUrl = urlObj.href;
        loadingIndicator.style.display = 'block';
        responseHeader.textContent = '';
        responseBody.textContent = '';
        axios.get(finalApiUrl)
        .then(r => {
          loadingIndicator.style.display = 'none';
          let hdr = '';
          Object.entries(r.headers).forEach(([k, v]) => { hdr += k + ': ' + v + '\n'; });
          const ctype = r.headers['content-type'] || '';
          // Update axios example code based on response type
          let axiosCode;
          if (Object.keys(params).length > 0) {
            if (ctype.includes('application/json')) {
              axiosCode = "axios.get('https://nirkyy.koyeb.app" + baseUrl + "', {\n  params: " + JSON.stringify(params, null, 2) + "\n})\n.then(response => {\n  console.log(response);\n})\n.catch(error => {\n  console.error(error);\n});";
            } else {
              axiosCode = "axios.get('https://nirkyy.koyeb.app" + baseUrl + "', {\n  params: " + JSON.stringify(params, null, 2) + ",\n  responseType: 'arraybuffer'\n})\n.then(response => {\n  console.log(response);\n})\n.catch(error => {\n  console.error(error);\n});";
            }
          } else {
            if (ctype.includes('application/json')) {
              axiosCode = "axios.get('https://nirkyy.koyeb.app" + baseUrl + "')\n.then(response => {\n  console.log(response);\n})\n.catch(error => {\n  console.error(error);\n});";
            } else {
              axiosCode = "axios.get('https://nirkyy.koyeb.app" + baseUrl + "', { responseType: 'arraybuffer' })\n.then(response => {\n  console.log(response);\n})\n.catch(error => {\n  console.error(error);\n});";
            }
          }
          axiosSnippet.innerText = axiosCode;
          successSound.play();
          responseHeader.textContent = hdr;
          if (ctype.includes('application/json')) {
            responseBody.textContent = JSON.stringify(r.data, null, 2);
            copyResponseBodyButton.style.display = 'block';
          } else if (ctype.startsWith('image/')) {
            responseBody.innerHTML = '';
            const img = document.createElement('img');
            img.src = r.config.url;
            img.style.maxWidth = '100%';
            img.style.height = 'auto';
            responseBody.appendChild(img);
            copyResponseBodyButton.style.display = 'none';
          }
          else if (ctype.startsWith('video/')) {
            responseBody.innerHTML = '';
            const vid = document.createElement('video');
            vid.src = r.config.url;
            vid.controls = true;
            vid.style.maxWidth = '100%';
            vid.style.height = 'auto';
            responseBody.appendChild(vid);
            copyResponseBodyButton.style.display = 'none';
          }
          else { responseBody.textContent = r.data; }
        })
        .catch(err => {
          loadingIndicator.style.display = 'none';
          errorSound.play();
          if (err.response) {
            let h = 'Status: ' + err.response.status + ' ' + err.response.statusText + '\n';
            Object.entries(err.response.headers).forEach(([k, v]) => { h += k + ': ' + v + '\n'; });
            responseHeader.textContent = h;
            if (typeof err.response.data === 'object') { responseBody.textContent = JSON.stringify(err.response.data, null, 2); }
            else { responseBody.textContent = err.response.data; }
          } else { responseHeader.textContent = 'Error: No response'; responseBody.textContent = err.message; }
        });
      });
      copyResponseHeaderButton.addEventListener('click', function() {
        const text = responseHeader.textContent;
        navigator.clipboard.writeText(text).then(() => {
          alert('Response Header berhasil disalin!');
          responseHeader.textContent = '';
        }).catch(() => alert('Gagal menyalin Response Header.'));
      });
      copyResponseBodyButton.addEventListener('click', function() {
        const text = responseBody.textContent;
        navigator.clipboard.writeText(text).then(() => {
          alert('Response Body berhasil disalin!');
          responseBody.textContent = '';
        }).catch(() => alert('Gagal menyalin Response Body.'));
      });
      copyExampleButton.addEventListener('click', function() {
        const text = axiosSnippet.innerText;
        navigator.clipboard.writeText(text).then(() => {
          alert('Contoh kode berhasil disalin!');
          axiosSnippet.innerText = '';
        }).catch(() => alert('Gagal menyalin contoh kode.'));
      });
      function searchData(term) {
        if (isFetching) return;
        isFetching = true;
        fetch('/search?term=' + encodeURIComponent(term))
        .then(r => r.text())
        .then(html => { endpointListSection.innerHTML = html; })
        .catch(e => console.error(e))
        .finally(() => { isFetching = false; });
      }
      function renderTags() {
        if (isFetching) return;
        isFetching = true;
        fetch('/renderpage?tags=')
        .then(r => r.text())
        .then(h => {
          const parser = new DOMParser();
          const doc = parser.parseFromString(h, 'text/html');
          const row = doc.querySelector('.row');
          if (row) endpointListSection.innerHTML = row.outerHTML;
        })
        .catch(e => console.error(e))
        .finally(() => { isFetching = false; });
      }
      function loadTags() {
        fetch('/tags')
        .then(res => res.json())
        .then(data => {
          let html = '<button class="btn btn-warning m-1" data-tags="">All</button>';
          data.tags.forEach(tag => { html += `<button class="btn btn-primary m-1" data-tags="${tag}">${tag}</button>`; });
          tagButtonsContainer.innerHTML = html;
        })
        .catch(console.error);
      }
      searchEndpointInput.addEventListener('input', debounce(function() {
        const s = searchEndpointInput.value.trim();
        if (s) { searchData(s); } else { renderTags(); }
      }, 300));
      tagButtonsContainer.addEventListener('click', function(e) {
        const btn = e.target.closest('button');
        if (btn) {
          const tags = btn.getAttribute('data-tags');
          searchEndpointInput.value = '';
          fetch('/renderpage?tags=' + encodeURIComponent(tags))
          .then(r => r.text())
          .then(h => {
            const parser = new DOMParser();
            const doc = parser.parseFromString(h, 'text/html');
            const row = doc.querySelector('.row');
            if (row) endpointListSection.innerHTML = row.outerHTML;
          })
          .catch(e => console.error(e));
        }
      });
      attachCardEvents();
      renderTags();
      loadTags();
    });
  </script>
</body>
</html>